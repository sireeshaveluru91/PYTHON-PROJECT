# -*- coding: utf-8 -*-
"""project1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zgxLA4ixXD4_p-fgXONGoXjZQc3OLUHu

Q1: You are working in a bank, and you have been given two lists of the employees who worked in 2021. Employees’ names in list 1 are Ramesh, Suresh, Mahesh, Ali, Jacob, and Saritha. List 2 contains the names of Ali, Mukesh, Mahesh, Jacob, Sai, and Sarita. Please write a program that helps to identify people who are common in both lists. Please do not use any in-built function.
"""

list1_names=['Ramesh','Suresh','Mahesh','Ali','Jacob','Sarita']
list2_names=['Ali','Mukesh','Mahesh','Jacob','Sai','Sarita']
result = []
for element in list1_names:
    if element in list2_names:
        result.append(element)
print(result)

#by converting into sets and using intersection
common_elements=list(set(list1_names).intersection(list2_names))
print(common_elements)

"""Q2: While entering data, someone entered a few names as a common string “Ramesh Suresh Mohit”. Please write a program which separates all the names and converts them into a list. Once converted into a list, please write a program that adds their age.


Ramesh:  25

Suresh: 22

Mohit: 26
"""

entered_names="Ramesh Suresh Mohit"
new_names=entered_names.split()
print(new_names)
age=[25,22,26]
res = {}
for name in new_names:
    for n in age:
        res[name] =n
        age.remove(n)
        break
print(res)

"""Q3: You are working in a medical store. A patient came to your medical store and asked to buy 2 strips of paracetamol, 3 strips of azithromycin, and 5 strips of Vitamin C. One strip of paracetamol costs Rs 35, one strip of azithromycin costs Rs 49, and one strip of vitamin c costs Rs. 33. Patient gave you Rs 2000. Please tell us what is the total cost of each medicine, the total cost of all medicine, and how much money you refunded to the patient.


"""

list_of_medicines=['paracetmol','azitromycin','vitaminc']
strip_cost=[35,49,33]
number_strips=[2,3,5]
patient_paid=2000
print("cost_para:",2*35)
print("cost_azi:",3*49)
print("cost_vitamin:",5*33)
cost_medicine=(2*35)+(3*49)+(33*5)
money_refund=patient_paid-cost_medicine
print(cost_medicine)
print(money_refund)

"""Q4: Accept a sentence as input and find the number of vowels in it. Assume that the sentence has no punctuation marks. For example, I am learning python contains 6 vowels. This function should be applicable for all other different sentences."""

import string
user_input=input("please enter a string:")
user_input=user_input.translate(str.maketrans('', '', string.punctuation))
print(user_input)
count=0
vowels="AaEeIiOoUu"
final=[letter for letter in user_input if letter in vowels]
print(len(final))
print("{} contains {} vowels".format(user_input,len(final)))

"""Q5: You have been appointed by the election commission to create a website. Your first task is to work on a program which tells candidates if they are eligible for voting or not. If they are eligible, your output should be ‘Congrats! You are eligible’; otherwise, it should tell that you have to return after X number of years. The eligibility criteria for voting is 18 years.


"""

age=int(input("please enter your age:"))
if age>=18:
  print("Congrats!You are eligible.")
else:
  return_age=18-age
  print("return after {} years.".format(return_age))

"""Q6: Given a list of integers, find the cumulative sum of the elements of the list and store them in another list.

A = [1, 2, 3, 4, 5]

Output:

[1, 3, 6, 10, 15]
"""

#calculating cumulative sum of numbers
A=[1,2,3,4,5]
length=len(A)
cumulative_list=[]
cu_list=[sum(A[0:x:1])for x in range(0,length+1)]
print(cu_list[1:])


#calculating cumulative sum of numbers
list=[1,2,3,4,5]
new_list=[]
j=0
for i in range(0,len(list)):
    j+=list[i]
    new_list.append(j)

print(new_list)

"""Q7:

WAP to encode a message entered by user as per below conditions:

for every word in the sentence,

1. If the word starts with a vowel, encode it as first and last letter of the word.

2. If the word starts with a consonant, remove all vowels from it.

Ensure the case insensitive comparisions/checks are performed.

Please enter your text:The quick brown fox used to sleep inside this box

Encoded Msg: Th qck brwn fx ud t slp ie ths bx




"""

user_text=input("please enter your text:")
def encoded_message(user_text):
  vowels=['a','e','i','o','u']
  encoded_msg=[]
  list_text=user_text.split()
  for word in list_text:
     if word[0].lower() in vowels:
       encoded_msg.append(word[0] + word[-1])
     else:
          encoded_word=''
          for letter in word:
               if letter.lower() not in vowels:
                    encoded_word += letter
          encoded_msg.append(encoded_word)
  return ' '.join(encoded_msg)

user_text=input("please enter your text:")
encoded_output=encoded_message(user_text)
print(encoded_output)

"""Q8:

Write a program to implement run length encoding of a string

RLE:Consecutive repetition of a character has to be replaced with the count of occurances and the character.

Enter your string :aabbbccdddae

Encoded: 2a3b2c3d1a1e


"""

def encode(message):
    count = 0
    chatacter = ''
    previous_char = message[0]
    result = ''
    length = len(message)

    i = 0
    while (i != length ):
        chatacter = message[i]

        if previous_char == chatacter :
            count = count + 1
        else :
            result = result + str(count) + previous_char
            count = 1
        #print(str(i) + str(chatacter) + str(previous_char) + "          " + str(result))
        previous_char = chatacter
        i = i + 1

    return result + str(count) + str(previous_char)

encoded_message=encode("ABBBBCCCCCCCCAB")
print(encoded_message)

